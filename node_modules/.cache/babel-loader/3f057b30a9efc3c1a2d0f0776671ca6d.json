{"ast":null,"code":"var _jsxFileName = \"/Users/matthill/food-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const newTotalAmount = state.totalAmount + action.item.price * 1;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItem) {\n      updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n      console.log(updatedItems);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems[existingCartItemIndex] = updatedItem;\n      console.log(updatedItems);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return initialState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, initialState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"5tETRhEDe87IOhxlpUpB38FwUVQ=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/matthill/food-app/src/store/CartProvider.js"],"names":["useReducer","CartContext","initialState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","item","price","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","amount","concat","existingItem","updatedTotalAmount","filter","console","log","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import {useReducer} from 'react';\nimport CartContext from './cart-context';\n\nconst initialState = {\n    items: [],\n    totalAmount: 0\n}\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD'){\n        const newTotalAmount = state.totalAmount + action.item.price * 1;\n\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n\n        let updatedItem;\n        let updatedItems;\n\n        if(existingCartItem){\n            updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + 1\n            };\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }else{\n            updatedItems = state.items.concat(action.item);\n        }\n       \n        return {\n            items: updatedItems,\n            totalAmount: newTotalAmount\n        };\n    }\n    if(action.type === 'REMOVE'){\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.id\n        );\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if(existingItem.amount === 1){\n            updatedItems = state.items.filter(item => item.id !== action.id);\n            console.log(updatedItems);\n        }else{\n            const updatedItem = {...existingItem, amount: existingItem.amount -1};\n            updatedItems[existingCartItemIndex] = updatedItem;\n            console.log(updatedItems);\n        }\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    return initialState;\n};\n\nconst CartProvider = props => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, initialState);\n\n    const addItemToCartHandler = item => {dispatchCartAction({type: 'ADD', item})};\n    const removeItemFromCartHandler = id => {dispatchCartAction({type: 'REMOVE', id})};\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return (\n       <CartContext.Provider value={cartContext}>\n           {props.children}\n       </CartContext.Provider> \n    )\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}