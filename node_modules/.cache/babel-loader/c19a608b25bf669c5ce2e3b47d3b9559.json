{"ast":null,"code":"var _jsxFileName = \"/Users/matthill/food-app/src/components/Products/ProductItem/ProductItemForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ProductItemForm.module.css\";\nimport Input from '../../UI/Input';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItemForm = () => {\n  _s();\n\n  const amountInputRef = useRef();\n  const [amountIsValid, setAmountIsValid] = useState(true);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmountNumber.trim().length === 0 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount',\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"please enter a valid amount!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductItemForm, \"O7Uh5hv/54GKxf7dGhD9dVUtRhQ=\");\n\n_c = ProductItemForm;\nexport default ProductItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItemForm\");","map":{"version":3,"sources":["/Users/matthill/food-app/src/components/Products/ProductItem/ProductItemForm.js"],"names":["classes","Input","useRef","useState","ProductItemForm","amountInputRef","amountIsValid","setAmountIsValid","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,OAA/B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,cAAc,GAAGH,MAAM,EAA7B;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMK,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGN,cAAc,CAACO,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QAAGG,mBAAmB,CAACC,IAApB,GAA2BC,MAA3B,KAAsC,CAAtC,IAA2CF,mBAAmB,GAAG,CAApE,EAAsE;AAClEP,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACH;AACJ,GAVD;;AAWA,sBACI;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACiB,IAAzB;AAA+B,IAAA,QAAQ,EAAET,aAAzC;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,GAAG,EAAEH,cADT;AAEI,MAAA,KAAK,EAAC,QAFV;AAEmB,MAAA,KAAK,EAAE;AACtBa,QAAAA,EAAE,EAAE,QADkB;AAEtBC,QAAAA,IAAI,EAAE,QAFgB;AAGtBC,QAAAA,GAAG,EAAE,GAHiB;AAItBC,QAAAA,GAAG,EAAE,GAJiB;AAKtBC,QAAAA,IAAI,EAAE,GALgB;AAMtBC,QAAAA,YAAY,EAAE;AANQ;AAF1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,EAYK,CAACjB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAMF,e;;KAAAA,e;AAiCN,eAAeA,eAAf","sourcesContent":["import classes from \"./ProductItemForm.module.css\";\nimport Input from '../../UI/Input';\nimport {useRef, useState} from 'react';\n\nconst ProductItemForm = () => {\n    const amountInputRef = useRef();\n    const [amountIsValid, setAmountIsValid] = useState(true);\n\n    const submitHandler = event => {\n        event.preventDefault();\n\n        const enteredAmount = amountInputRef.current.value;\n        const enteredAmountNumber = +enteredAmount;\n\n        if(enteredAmountNumber.trim().length === 0 || enteredAmountNumber > 5){\n            setAmountIsValid(false);\n            return;\n        }\n    };\n    return (\n        <form className={classes.form} onSubmit={submitHandler}>  \n            <Input \n                ref={amountInputRef}\n                label=\"Amount\" input={{\n                id: 'amount',\n                type: 'number',\n                min: '1',\n                max: '5',\n                step: '1',\n                defaultValue: '1'\n            }} />\n            <button>+ Add</button>\n            {!amountIsValid && <p>please enter a valid amount!</p>}\n        </form>\n    );\n}\n\nexport default ProductItemForm;"]},"metadata":{},"sourceType":"module"}